<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.charge.dao.mapper.device.ChargingBoxMapper">
    <resultMap id="BaseResultMap" type="com.charge.entity.po.device.ChargingBox">
        <id column="ID" property="id" jdbcType="INTEGER"/>
        <result column="PT_ID" property="ptId" jdbcType="INTEGER"/>
        <result column="S_ID" property="sId" jdbcType="INTEGER"/>
        <result column="BOX_CUSTOMER_ID" property="boxCustomerId" jdbcType="VARCHAR"/>
        <result column="BOX_DATE" property="boxDate" jdbcType="VARCHAR"/>
        <result column="BOX_SN" property="boxSn" jdbcType="VARCHAR"/>
        <result column="LOCATION" property="location" jdbcType="VARCHAR"/>
        <result column="STATUS" property="status" jdbcType="VARCHAR"/>
        <result column="MODEL" property="model" jdbcType="VARCHAR"/>
        <result column="SOFTWARE_VERSION" property="softwareVersion" jdbcType="VARCHAR"/>
        <result column="BUSINESS" property="business" jdbcType="VARCHAR"/>
        <result column="BORROW_NUM" property="borrowNum" jdbcType="VARCHAR"/>
        <result column="POWER_BANK_NUM" property="powerBankNum" jdbcType="VARCHAR"/>
        <result column="CAN_BORROW_NUM" property="canBorrowNum" jdbcType="VARCHAR"/>
        <result column="CAN_BACK_NUM" property="canBackNum" jdbcType="VARCHAR"/>
        <result column="MALFUNCTION_NUM" property="malfunctionNum" jdbcType="VARCHAR"/>
        <result column="SPEAKER_STATUS" property="speakerStatus" jdbcType="VARCHAR"/>
        <result column="SIM_CCID" property="simCcid" jdbcType="VARCHAR"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    ID, PT_ID, S_ID, BOX_CUSTOMER_ID, BOX_DATE, BOX_SN, LOCATION, STATUS, MODEL, SOFTWARE_VERSION,
    BUSINESS, BORROW_NUM, POWER_BANK_NUM, CAN_BORROW_NUM, CAN_BACK_NUM, MALFUNCTION_NUM,
    SPEAKER_STATUS, SIM_CCID, CREATE_TIME, UPDATE_TIME
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_charging_box
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_charging_box
    where ID = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.charge.entity.po.device.ChargingBox">
    insert into t_charging_box (ID, PT_ID, S_ID,
      BOX_CUSTOMER_ID, BOX_DATE, BOX_SN,
      LOCATION, STATUS, MODEL,
      SOFTWARE_VERSION, BUSINESS, BORROW_NUM,
      POWER_BANK_NUM, CAN_BORROW_NUM, CAN_BACK_NUM,
      MALFUNCTION_NUM, SPEAKER_STATUS, SIM_CCID,
      CREATE_TIME, UPDATE_TIME)
    values (#{id,jdbcType=INTEGER}, #{ptId,jdbcType=INTEGER}, #{sId,jdbcType=INTEGER},
      #{boxCustomerId,jdbcType=VARCHAR}, #{boxDate,jdbcType=VARCHAR}, #{boxSn,jdbcType=VARCHAR},
      #{location,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR},
      #{softwareVersion,jdbcType=VARCHAR}, #{business,jdbcType=VARCHAR}, #{borrowNum,jdbcType=VARCHAR},
      #{powerBankNum,jdbcType=VARCHAR}, #{canBorrowNum,jdbcType=VARCHAR}, #{canBackNum,jdbcType=VARCHAR},
      #{malfunctionNum,jdbcType=VARCHAR}, #{speakerStatus,jdbcType=VARCHAR}, #{simCcid,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.charge.entity.po.device.ChargingBox">
        insert into t_charging_box
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="ptId != null">
                PT_ID,
            </if>
            <if test="sId != null">
                S_ID,
            </if>
            <if test="boxCustomerId != null">
                BOX_CUSTOMER_ID,
            </if>
            <if test="boxDate != null">
                BOX_DATE,
            </if>
            <if test="boxSn != null">
                BOX_SN,
            </if>
            <if test="location != null">
                LOCATION,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="model != null">
                MODEL,
            </if>
            <if test="softwareVersion != null">
                SOFTWARE_VERSION,
            </if>
            <if test="business != null">
                BUSINESS,
            </if>
            <if test="borrowNum != null">
                BORROW_NUM,
            </if>
            <if test="powerBankNum != null">
                POWER_BANK_NUM,
            </if>
            <if test="canBorrowNum != null">
                CAN_BORROW_NUM,
            </if>
            <if test="canBackNum != null">
                CAN_BACK_NUM,
            </if>
            <if test="malfunctionNum != null">
                MALFUNCTION_NUM,
            </if>
            <if test="speakerStatus != null">
                SPEAKER_STATUS,
            </if>
            <if test="simCcid != null">
                SIM_CCID,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="updateTime != null">
                UPDATE_TIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="ptId != null">
                #{ptId,jdbcType=INTEGER},
            </if>
            <if test="sId != null">
                #{sId,jdbcType=INTEGER},
            </if>
            <if test="boxCustomerId != null">
                #{boxCustomerId,jdbcType=VARCHAR},
            </if>
            <if test="boxDate != null">
                #{boxDate,jdbcType=VARCHAR},
            </if>
            <if test="boxSn != null">
                #{boxSn,jdbcType=VARCHAR},
            </if>
            <if test="location != null">
                #{location,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="model != null">
                #{model,jdbcType=VARCHAR},
            </if>
            <if test="softwareVersion != null">
                #{softwareVersion,jdbcType=VARCHAR},
            </if>
            <if test="business != null">
                #{business,jdbcType=VARCHAR},
            </if>
            <if test="borrowNum != null">
                #{borrowNum,jdbcType=VARCHAR},
            </if>
            <if test="powerBankNum != null">
                #{powerBankNum,jdbcType=VARCHAR},
            </if>
            <if test="canBorrowNum != null">
                #{canBorrowNum,jdbcType=VARCHAR},
            </if>
            <if test="canBackNum != null">
                #{canBackNum,jdbcType=VARCHAR},
            </if>
            <if test="malfunctionNum != null">
                #{malfunctionNum,jdbcType=VARCHAR},
            </if>
            <if test="speakerStatus != null">
                #{speakerStatus,jdbcType=VARCHAR},
            </if>
            <if test="simCcid != null">
                #{simCcid,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.charge.entity.po.device.ChargingBox">
        update t_charging_box
        <set>
            <if test="ptId != null">
                PT_ID = #{ptId,jdbcType=INTEGER},
            </if>
            <if test="sId != null">
                S_ID = #{sId,jdbcType=INTEGER},
            </if>
            <if test="boxCustomerId != null">
                BOX_CUSTOMER_ID = #{boxCustomerId,jdbcType=VARCHAR},
            </if>
            <if test="boxDate != null">
                BOX_DATE = #{boxDate,jdbcType=VARCHAR},
            </if>
            <if test="boxSn != null">
                BOX_SN = #{boxSn,jdbcType=VARCHAR},
            </if>
            <if test="location != null">
                LOCATION = #{location,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=VARCHAR},
            </if>
            <if test="model != null">
                MODEL = #{model,jdbcType=VARCHAR},
            </if>
            <if test="softwareVersion != null">
                SOFTWARE_VERSION = #{softwareVersion,jdbcType=VARCHAR},
            </if>
            <if test="business != null">
                BUSINESS = #{business,jdbcType=VARCHAR},
            </if>
            <if test="borrowNum != null">
                BORROW_NUM = #{borrowNum,jdbcType=VARCHAR},
            </if>
            <if test="powerBankNum != null">
                POWER_BANK_NUM = #{powerBankNum,jdbcType=VARCHAR},
            </if>
            <if test="canBorrowNum != null">
                CAN_BORROW_NUM = #{canBorrowNum,jdbcType=VARCHAR},
            </if>
            <if test="canBackNum != null">
                CAN_BACK_NUM = #{canBackNum,jdbcType=VARCHAR},
            </if>
            <if test="malfunctionNum != null">
                MALFUNCTION_NUM = #{malfunctionNum,jdbcType=VARCHAR},
            </if>
            <if test="speakerStatus != null">
                SPEAKER_STATUS = #{speakerStatus,jdbcType=VARCHAR},
            </if>
            <if test="simCcid != null">
                SIM_CCID = #{simCcid,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.charge.entity.po.device.ChargingBox">
    update t_charging_box
    set PT_ID = #{ptId,jdbcType=INTEGER},
      S_ID = #{sId,jdbcType=INTEGER},
      BOX_CUSTOMER_ID = #{boxCustomerId,jdbcType=VARCHAR},
      BOX_DATE = #{boxDate,jdbcType=VARCHAR},
      BOX_SN = #{boxSn,jdbcType=VARCHAR},
      LOCATION = #{location,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      MODEL = #{model,jdbcType=VARCHAR},
      SOFTWARE_VERSION = #{softwareVersion,jdbcType=VARCHAR},
      BUSINESS = #{business,jdbcType=VARCHAR},
      BORROW_NUM = #{borrowNum,jdbcType=VARCHAR},
      POWER_BANK_NUM = #{powerBankNum,jdbcType=VARCHAR},
      CAN_BORROW_NUM = #{canBorrowNum,jdbcType=VARCHAR},
      CAN_BACK_NUM = #{canBackNum,jdbcType=VARCHAR},
      MALFUNCTION_NUM = #{malfunctionNum,jdbcType=VARCHAR},
      SPEAKER_STATUS = #{speakerStatus,jdbcType=VARCHAR},
      SIM_CCID = #{simCcid,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}

    where ID = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectAll" resultMap="BaseResultMap" parameterType="com.charge.entity.po.device.ChargingBox">
     select * from t_charging_box
  </select>


    <!--
        根据agent_id查询代理商拥有的充电箱预警详情
    -->
    <select id="findChargingBoxByAgentId" resultMap="BaseResultMap" parameterType="String">
        select t_charging_box.*
        from
        t_charging_box,
        t_agent,
        t_shop
        <where>
            <if test="id_num != null">
                #{id_num} = t_agent.ID_NUMBER AND
            </if>
            t_shop.AG_ID = t_agent.ID AND
            t_charging_box.S_ID = t_shop.ID
        </where>
    </select>

    <!--通过agentId,searchData查询代理商名下的商户拥有的充电箱的预警详情-->
    <!--当查询的结果与POJO名字不一致的时候，用resultMap来实现映射。-->
    <resultMap type="com.charge.entity.po.back.wechat.agent.EarlyWarning" id="earlyWarningMap">
        <result column="shopName" property="shopName"/>
        <result column="shopContract" property="shopContract"/>
        <result column="shopAddress" property="shopAddress"/>
        <result column="powerBankNum" property="powerBankNum"/>
        <result column="deviceNO" property="deviceNO"/>
    </resultMap>

    <select id="findEarlyWarning" resultMap="earlyWarningMap" parameterType="Map">
        SELECT
        t_shop.NAME shopName,
        t_shop.CONTRACT_PERSON_PHONE shopContract,
        t_shop.ADDRESS shopAddress,
        t_charging_box.CAN_BORROW_NUM powerBankNum,
        t_charging_box.BOX_CUSTOMER_ID deviceNO
        FROM
        t_shop,
        t_charging_box,
        t_agent
        <where>
            <if test="queryDataMap.agentId != null">
                #{queryDataMap.agentId} = t_agent.ID_NUMBER AND
            </if>
            t_shop.AG_ID = t_agent.ID AND
            t_charging_box.S_ID = t_shop.ID AND
            (t_charging_box.CAN_BORROW_NUM+0) &lt;= '3'
            <if test="queryDataMap.searchData != null">
                AND
                CONCAT(
                t_shop.NAME,
                t_shop.ADDRESS,
                t_charging_box.CAN_BORROW_NUM)
                like '%${queryDataMap.searchData}%'
            </if>
        </where>
    </select>


    <!--
        通过agentId,statusRange,type,searchData查询代理商指定搜索内容,指定日期的订单记录
        queryDataMap
    -->
    <!--当查询的结果与POJO名字不一致的时候，用resultMap来实现映射。-->
    <resultMap type="com.charge.entity.po.back.wechat.agent.DeviceManage" id="deviceManageMap">
        <result column="chargingBoxNO" property="chargingBoxNO"/>
        <result column="powerBankNum" property="powerBankNum"/>
        <result column="shopName" property="shopName"/>
        <result column="status" property="status"/>
    </resultMap>
    <select id="findDeviceManageInfo" resultMap="deviceManageMap" parameterType="Map">
        SELECT
        t_charging_box.BOX_CUSTOMER_ID chargingBoxNO,
        IFNULL(t_charging_box.CAN_BORROW_NUM,0) +
        IFNULL(t_charging_box.MALFUNCTION_NUM,0) powerBankNum,
        t_shop.NAME shopName,
        t_charging_box.STATUS status
        FROM
        t_agent,
        t_charging_box,
        t_shop
        <where>
            <if test="queryDataMap.agentId != null">
                #{queryDataMap.agentId} = t_agent.ID_NUMBER AND
            </if>
            t_shop.AG_ID = t_agent.ID AND
            t_charging_box.S_ID = t_shop.ID
            <if test="queryDataMap.statusRange != null">
                AND #{queryDataMap.statusRange} = t_charging_box.STATUS
            </if>
            <if test="queryDataMap.searchData != null">
                AND
                CONCAT(
                t_charging_box.BOX_CUSTOMER_ID,
                t_shop.NAME,
                IFNULL(
                t_charging_box.CAN_BORROW_NUM,0) +
                IFNULL(t_charging_box.MALFUNCTION_NUM,0))
                like '%${queryDataMap.searchData}%'
            </if>
        </where>
    </select>

    <!--
        进行代理商设备管理页之解绑/重启操作
        将需要解绑的充电箱的s_id设为空,即该充电箱没有对应的商户了
    -->
    <update id="updateAgentInfo" parameterType="Map">
        update t_charging_box
        <set>
            t_charging_box.S_ID = NULL
            <where>
                <if test="queryDataMap.deviceNO != null">
                    #{queryDataMap.deviceNO} = t_charging_box.BOX_CUSTOMER_ID
                </if>
            </where>
        </set>
    </update>


    <!--根据agentId,deviceNO查询代理商设备弹出页信息-->
    <!--当查询的结果与POJO名字不一致的时候，用resultMap来实现映射。-->
    <resultMap type="com.charge.entity.po.back.wechat.agent.DevicePop" id="devicePopMap">
        <result column="version" property="version"/>
        <result column="deviceStatus" property="deviceStatus"/>
        <result column="shopName" property="shopName"/>
    </resultMap>

    <select id="findDevicePopInfo" resultMap="devicePopMap" parameterType="Map">
        SELECT
        t_charging_box.SOFTWARE_VERSION version,
        t_charging_box.STATUS deviceStatus,
        t_shop.NAME shopName
        FROM
        t_charging_box,
        t_shop,
        t_agent
        <where>
            <if test="queryDataMap.deviceNO != null">
                #{queryDataMap.deviceNO} = t_charging_box.BOX_CUSTOMER_ID AND  <!--  扫码出来的数据是否是BOX_CUSTOMER_ID???-->
            </if>
            t_charging_box.S_ID = t_shop.ID AND
            t_shop.AG_ID = t_agent.ID
            <if test="queryDataMap.agentId != null">
                AND
                #{queryDataMap.agentId} = t_agent.ID_NUMBER
            </if>
        </where>
    </select>

    <!--通过设备编号查询设备是否存在,并返回id-->
    <select id="queryDeviceByDeviceNO" resultType="Integer" parameterType="String">
        select ID
        FROM
        t_charging_box
        <where>
            <if test="deviceNO != null">
                t_charging_box.BOX_CUSTOMER_ID = deviceNO
            </if>
        </where>
    </select>


    <!--更新设备关联的商户-->
    <update id="updateDeviceSID" parameterType="Map">
        update t_charging_box
        <set>
            <if test="queryDataMap.shopID != null">
                t_charging_box.S_ID = #{queryDataMap.shopID}
            </if>
        </set>
        <where>
            <if test="queryDataMap.deviceNO != null">
                t_charging_box.BOX_CUSTOMER_ID =#{queryDataMap.deviceNO}
            </if>
        </where>
    </update>


    <!--通过shopId获取商户名下的充电宝编号-->
    <select id="findChargingBoxNO" parameterType="String" resultType="String">
        SELECT t_charging_box.BOX_CUSTOMER_ID chargingBoxNo
        FROM
        t_charging_box
        <where>
            <if test="shopId != null">
                t_charging_box.S_ID = #{shopId}
            </if>
        </where>
    </select>

    <!--获取充电宝可借可还数量-->
    <select id="findBorrowBackNum" resultMap="BaseResultMap" parameterType="String">
          SELECT
            CAN_BORROW_NUM,
            CAN_BACK_NUM
            FROM
            t_charging_box
            <where>
                <if test="chargingBoxNO != null">
                    t_charging_box.BOX_CUSTOMER_ID = #{chargingBoxNO}
                </if>
            </where>
    </select>

    <!--查询指定设备的运行状态-->
    <select id="findDeviceStatus" parameterType="String" resultType="String">
        SELECT
        STATUS
        FROM
        t_charging_box
        <where>
            <if test="deviceNO != null">
                t_charging_box.BOX_CUSTOMER_ID = #{deviceNO}
            </if>
        </where>
    </select>

    <!--查询指定设备的运行状态,可借充电宝数量-->
    <select id="findDeviceStatusAndBorrowNum" parameterType="String" resultMap="BaseResultMap">
        SELECT
        STATUS,
        CAN_BORROW_NUM
        FROM
        t_charging_box
        <where>
            <if test="deviceNO != null">
                t_charging_box.BOX_CUSTOMER_ID = #{deviceNO}
            </if>
        </where>
    </select>

</mapper>